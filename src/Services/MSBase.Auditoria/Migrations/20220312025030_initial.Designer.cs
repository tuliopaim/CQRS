// <auto-generated />
using System;
using MSBase.Auditoria.API.Infrasctructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MSBase.Auditoria.API.Migrations
{
    [DbContext(typeof(AuditoriaDbContext))]
    [Migration("20220312025030_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AuditoriaEntidade")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MSBase.Auditoria.API.Domain.AuditoriaEntidade", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataCriacao");

                    b.Property<Guid?>("IdEntidade")
                        .HasColumnType("uuid");

                    b.Property<string>("NomeEntidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeTabela")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TipoAuditoria")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditoriaEntidade", "AuditoriaEntidade");
                });

            modelBuilder.Entity("MSBase.Auditoria.API.Domain.AuditoriaPropriedade", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("AuditoriaId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataCriacao");

                    b.Property<bool>("EhChavePrimaria")
                        .HasColumnType("boolean");

                    b.Property<string>("NomeDaColuna")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeDaPropriedade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ValorAntigo")
                        .HasColumnType("text");

                    b.Property<string>("ValorNovo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriaId");

                    b.ToTable("AuditoriaPropriedade", "AuditoriaEntidade");
                });

            modelBuilder.Entity("MSBase.Auditoria.API.Domain.AuditoriaPropriedade", b =>
                {
                    b.HasOne("MSBase.Auditoria.API.Domain.AuditoriaEntidade", "AuditoriaEntidade")
                        .WithMany("Propriedades")
                        .HasForeignKey("AuditoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditoriaEntidade");
                });

            modelBuilder.Entity("MSBase.Auditoria.API.Domain.AuditoriaEntidade", b =>
                {
                    b.Navigation("Propriedades");
                });
#pragma warning restore 612, 618
        }
    }
}
