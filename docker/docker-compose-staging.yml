version: '3.8'

services:
  
  postgres:
    container_name: msbase-postgres-staging
    image: postgres:latest
    hostname: localhost
    ports:
        - 5432:5432
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  zookeeper:
    container_name: msbase-zookeeper-staging
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    container_name: msbase-kafka-staging
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    container_name: msbase-elasticsearch-staging
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  kibana:
    container_name: msbase-kibana-staging
    image: docker.elastic.co/kibana/kibana:7.14.2
    ports:
      - "5601:5601"
      
  email-sender:
    container_name: email-sender-staging
    image: email-sender:latest
    build:
        context: ../src
        dockerfile: ./Email/EmailSender/Dockerfile
    restart: always
    ports: 
        - 5030:5030    
    environment:
        - ASPNETCORE_ENVIRONMENT=Staging
        - ASPNETCORE_URLS=http://*:5030
    depends_on:
        - postgres
